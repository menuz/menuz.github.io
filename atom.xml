<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Toss]]></title>
  <subtitle><![CDATA[Toss as much as possible]]></subtitle>
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  <link href="http://yoursite.com"/>
  <updated>2013-11-05T11:52:59.949Z</updated>
  <id>http://yoursite.com/</id>
  <author>
    <name><![CDATA[menuz]]></name>
    <email><![CDATA[dmnrei@gmail.com]]></email>
  </author>
  <generator uri="http://zespia.tw/hexo">Hexo</generator>
  <entry>
    <title type="html"><![CDATA[webmagic网页解析包阅读]]></title>
    <link href="http://yoursite.com/2013/11/04/webmagic网页解析包阅读/"/>
    <id>http://yoursite.com/2013/11/04/webmagic网页解析包阅读/</id>
    <published>2013-11-04T11:08:09.000Z</published>
    <updated>2013-11-05T11:15:45.000Z</updated>
    <content type="html"><![CDATA[<p>I have been reading <a href="https://github.com/menuz/webmagic" target="_blank">webmagic</a>, a web crawler in github. I try to read the source code, and some design pattern can be extracted to share. </p>
<p><strong><strong>1. Overview &amp; Prerequisites</strong></strong></p>
<p>I have read the <strong>com.codecraft.webmagic.selector</strong> package, which aims to parse html, and extract urls in html. <a href="http://jsoup.org/" target="_blank">Jsoup</a> is an open source project on parsing html, and <a href="https://github.com/code4craft/xsoup" target="_blank">Xsoup</a> is a subproject based on Jsoup.</p>
<p><strong>1.1 Jsoup intro</strong></p>
<p>Jsoup has two ways of extracting html: <strong>DOM navigatoin</strong> and <strong>Selector syntax</strong>. The demo below is easy understanding, which may give you a common sense about what jsoup can do. Plus HtmlCleaner is also a html parser, but the performance and time efficiency is not as good as Jsoup.</p>
<pre><code>import java<span class="preprocessor">.io</span><span class="preprocessor">.File</span><span class="comment">;</span>
import java<span class="preprocessor">.io</span><span class="preprocessor">.IOException</span><span class="comment">;</span>
import org<span class="preprocessor">.jsoup</span><span class="preprocessor">.Jsoup</span><span class="comment">;</span>
import org<span class="preprocessor">.jsoup</span><span class="preprocessor">.nodes</span><span class="preprocessor">.Document</span><span class="comment">;</span>
import org<span class="preprocessor">.jsoup</span><span class="preprocessor">.nodes</span><span class="preprocessor">.Element</span><span class="comment">;</span>
import org<span class="preprocessor">.jsoup</span><span class="preprocessor">.select</span><span class="preprocessor">.Elements</span><span class="comment">;</span>
public class JsoupTest {
    public static void main(String[] args) {
        m1()<span class="comment">;</span>
        m2()<span class="comment">;</span>
        m4()<span class="comment">;</span>
    }
    public static void m1() {
        File input = new File(<span class="string">"/Users/menuz/Desktop/baidu.html"</span>)<span class="comment">;</span>
        Document doc =  null<span class="comment">;</span>
        try {
            doc = Jsoup<span class="preprocessor">.parse</span>(input, <span class="string">"UTF-8"</span>, <span class="string">"http://www.baidu.com/"</span>)<span class="comment">;</span>
        } catch (IOException e) {
            e<span class="preprocessor">.printStackTrace</span>()<span class="comment">;</span>
        }
        Element content = doc<span class="preprocessor">.getElementById</span>(<span class="string">"body"</span>)<span class="comment">;</span>
        Elements links = content<span class="preprocessor">.getElementsByTag</span>(<span class="string">"a"</span>)<span class="comment">;</span>
        for (Element link : links) {
          String linkHref = link<span class="preprocessor">.attr</span>(<span class="string">"href"</span>)<span class="comment">;</span>
          String linkText = link<span class="preprocessor">.text</span>()<span class="comment">;</span>
        }
    }
    public static void m2() {
        File input = new File(<span class="string">"/Users/menuz/Desktop/baidu.html"</span>)<span class="comment">;</span>
        Document doc =  null<span class="comment">;</span>
        try {
            doc = Jsoup<span class="preprocessor">.parse</span>(input, <span class="string">"UTF-8"</span>, <span class="string">"http://www.baidu.com/"</span>)<span class="comment">;</span>
        } catch (IOException e) {
            e<span class="preprocessor">.printStackTrace</span>()<span class="comment">;</span>
        }
        Elements links = doc<span class="preprocessor">.select</span>(<span class="string">"a[href]"</span>)<span class="comment">; // a with href</span>
        for(Element link : links) {
            String href =link<span class="preprocessor">.absUrl</span>(<span class="string">"href"</span>)<span class="comment">;</span>
            System<span class="preprocessor">.out</span><span class="preprocessor">.println</span>(href)<span class="comment">;</span>
        }
        System<span class="preprocessor">.out</span><span class="preprocessor">.println</span>(<span class="string">"links size = "</span> + links<span class="preprocessor">.size</span>())<span class="comment">;</span>
    }
    public static void m3() {
        String html = <span class="string">"&lt;p&gt;An &lt;a href='http://example.com/'&gt;&lt;b&gt;example&lt;/b&gt;&lt;/a&gt; link.&lt;/p&gt;"</span><span class="comment">;</span>
        Document doc = Jsoup<span class="preprocessor">.parse</span>(html)<span class="comment">;</span>
        Element link = doc<span class="preprocessor">.select</span>(<span class="string">"a"</span>)<span class="preprocessor">.first</span>()<span class="comment">;</span>
        String text = doc<span class="preprocessor">.body</span>()<span class="preprocessor">.text</span>()<span class="comment">; // "An example link"</span>
        String linkHref = link<span class="preprocessor">.attr</span>(<span class="string">"href"</span>)<span class="comment">; // "http://example.com/"</span>
        String linkText = link<span class="preprocessor">.text</span>()<span class="comment">; // "example""</span>
        String linkOuterH = link<span class="preprocessor">.outerHtml</span>()<span class="comment">; </span>
            // <span class="string">"&lt;a href="</span>http://example<span class="preprocessor">.com</span><span class="string">"&gt;&lt;b&gt;example&lt;/b&gt;&lt;/a&gt;"</span>
        String linkInnerH = link<span class="preprocessor">.html</span>()<span class="comment">; // "&lt;b&gt;example&lt;/b&gt;"</span>
    }
    public static void m4() {
        Document doc = null<span class="comment">;</span>
        try {
            doc = Jsoup<span class="preprocessor">.connect</span>(<span class="string">"http://www.baidu.com"</span>)<span class="preprocessor">.get</span>()<span class="comment">;</span>
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e<span class="preprocessor">.printStackTrace</span>()<span class="comment">;</span>
        }
        Elements links = doc<span class="preprocessor">.select</span>(<span class="string">"a[href]"</span>)<span class="comment">; // a with href</span>
        for(Element link : links) {
            String href =link<span class="preprocessor">.absUrl</span>(<span class="string">"href"</span>)<span class="comment">;</span>
            System<span class="preprocessor">.out</span><span class="preprocessor">.println</span>(href)<span class="comment">;</span>
        }
        System<span class="preprocessor">.out</span><span class="preprocessor">.println</span>(<span class="string">"links size = "</span> + links<span class="preprocessor">.size</span>())<span class="comment">;</span>
        Element link = doc<span class="preprocessor">.select</span>(<span class="string">"a"</span>)<span class="preprocessor">.first</span>()<span class="comment">;</span>
        String relHref = link<span class="preprocessor">.attr</span>(<span class="string">"href"</span>)<span class="comment">; // == "http://www.baidu.com/gaoji/preferences.html"</span>
        String absHref = link<span class="preprocessor">.attr</span>(<span class="string">"abs:href"</span>)<span class="comment">; // "http://www.baidu.com/gaoji/preferences.html"</span>
    }
}</code></pre>
<hr>
<p><strong>2. SimpleFactory Pattern</strong></p>
<p><strong>2.1 Selector &amp; ElementSelector </strong> are two interfaces. Classes implement Selector are the real classes to parse html. </p>
<p><strong>2.2 Selectors</strong> actually is a Selector Factory creating different Selectors, such as RegexSelector, XpathSelector, CssSelector and XsoupSelector.<strong>RegexSelector</strong> will handle with urls extracted by Jsoup.<strong>XpathSelector</strong> will use HtmlCleaner to handle with whole html. <strong>CssSelector</strong> handles with an Element, such as a Element, extracted by Jsoup. <strong>XsoupSelector</strong> is same with CssSelector, what is more, XsoupSelector also use Xsoup, which extends from Jsoup. So Jsoup is the most important thing.</p>
<p><strong>2.3 Selectable</strong> is the main class known public to developer, providing lots of methods. Regex pattern, regext(&quot;.a<em>href</em>.“), Css Pattern, $(”a[href]“), Xpath pattern, xpath(”//@href&quot;).<strong>Class PlainText</strong>, <strong>Html</strong> implements Selectable. <strong>Html</strong> has document properties for storing whole html info, <strong>Html</strong> use <strong>Selectors</strong> to create specific <strong>Selector</strong> to handle document inside html and generate what we want.</p>
<img src="/img/selector.png" class="[class names]" title="[500] [500] [title text [alt text]]">



<p><strong>3.Conclusion</strong></p>
<p><strong>3.1 interface program oriented, try to use interface as much as possible.</strong></p>
<p><strong>3.2 class has many properties to set, method return Class self make it work easier.</strong></p>
<p><strong>3.3 try simplefactory.</strong></p>
<blockquote><p>人生就是认识自我的过程</p>
</blockquote>
]]></content>
    <category scheme="http://yoursite.com/tags/Webmagic/" term="Webmagic"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[多线程导入GB数据到MySQL]]></title>
    <link href="http://yoursite.com/2013/10/22/多线程导入gb数据到mysql/"/>
    <id>http://yoursite.com/2013/10/22/多线程导入gb数据到mysql/</id>
    <published>2013-10-22T12:16:18.000Z</published>
    <updated>2013-10-22T13:34:06.000Z</updated>
    <content type="html"><![CDATA[<p>Description: 1千万数据导入MySQL<br>Mac OSX 10.8 + MySQL5.6.3 + Eclipse4.x<br>MySQL采用Brew安装</p>
<p>首先创建表结构student(id,name)</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">create</span> <span class="keyword">table</span> student(
    id <span class="keyword">int</span>,
    name <span class="keyword">varchar</span>(<span class="number">10</span>)
);</span>
</pre></td></tr></table></figure>

<p>Java程序随机产生1千万条记录</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
</pre></td><td class="code"><pre>
<span class="keyword">package</span> com.test;

<span class="keyword">import</span> java.io.BufferedWriter;
<span class="keyword">import</span> java.io.FileWriter;
<span class="keyword">import</span> java.io.IOException;
<span class="keyword">import</span> java.util.ArrayList;

<span class="javadoc">/**
 * 
 * 此类描述的是：用来生成student,score表的模拟数据
 * <span class="javadoctag">@author</span>: dmnrei<span class="javadoctag">@gmail</span>.com
 * <span class="javadoctag">@version</span>: 2013-10-17 下午3:52:09
 */</span>
<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LX1017</span> {</span>
    <span class="javadoc">/**
     * 表记录数，默认一千万
     */</span>
    <span class="keyword">static</span> <span class="keyword">int</span> recordNum = <span class="number">10000000</span>;

    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) <span class="keyword">throws</span> IOException {
        <span class="comment">// 生成学生表的sql文件</span>
        generateStudent();
    }

    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> generateStudent() <span class="keyword">throws</span> IOException {
        FileWriter fileWriter2 = <span class="keyword">new</span> FileWriter(<span class="string">"student.sql"</span>, <span class="keyword">false</span>);  
        BufferedWriter bufferedWriter = <span class="keyword">new</span> BufferedWriter(fileWriter2);  

        StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="number">1024</span>*<span class="number">1024</span>);
        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=recordNum; i++) {
            String str = <span class="string">"insert into student values("</span> + i+ <span class="string">", '"</span> + i + <span class="string">"');"</span>;
            sb.append(str);
            sb.append(<span class="string">"\n"</span>);

            <span class="keyword">if</span>(i%<span class="number">10000</span> == <span class="number">0</span>) {
                bufferedWriter.write(sb.toString());
                bufferedWriter.flush();
                sb = <span class="keyword">new</span> StringBuffer(<span class="number">1024</span>*<span class="number">1024</span>);
            }
        }
        bufferedWriter.close();
    }
}
</pre></td></tr></table></figure>

<p>Mysqldump导入数据库 (耗时30min)</p>
<figure class="highlight lang-[shell]"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>now=<span class="variable">$(</span>date +<span class="string">"<span class="variable">%T</span>"</span>)
echo <span class="string">"Current time : <span class="variable">$now</span>"</span>
mysql -u username -ppwd test &lt; student.sql
now=<span class="variable">$(</span>date +<span class="string">"<span class="variable">%T</span>"</span>)
echo <span class="string">"Current time : <span class="variable">$now</span>"</span>
</pre></td></tr></table></figure>

<p>由于耗时过长，尝试多线程导入 (耗时15min)<br>线程数目1k<br>每个线程处理10k条记录</p>
<p>0) 线程启动应该间隔启动,50ms, 一下子起来会死的好惨</p>
<p>1) 每个线程一次处理1k个sql插入，采用batch插入，每次处理也让线程休息下，中途数据库操作类不要关闭连接，直到完成手动释放连接。</p>
<p>2) MySQL的最大连接数1k个，/usr/local/Cellar/mysql/5.6.13/my.cnf在[mysqld]修改max_connections=2000,重启mysql即可<br>alias restart-mysql=“/usr/local/Cellar/mysql/5.6.13/support-files/mysql.server restart”<br>alias stop-mysql=“/usr/local/Cellar/mysql/5.6.13/support-files/mysql.server stop”<br>alias start-mysql=“/usr/local/Cellar/mysql/5.6.13/support-files/mysql.server start”<br>进入mysql,利用命令查看show variables like ‘max%’,可以验证是否修改成功。</p>
<p>3) Eclipse4.x运行程序，经常内存不足<br>    修改Run Configurations (此方法可行)<br>    在代码上右键，依次点击Run As -&gt; Run Configurations，在Arguments 参数中的VM arguments:<br>    中填入如下值即可。<br>    -Xms512m -Xmx1024m</p>
<p>最后尝试了mysql导入脚本，首先mysqldump出student表结构数据，然后重新导入(耗时1min，惊呆了~~)<br>0) 上锁<br>Lock Table ‘student’ Write<br>insert………..<br>Unlock ‘student’</p>
<p>1) Batch插入<br>insert into student values(1,‘1’),(2,‘2’)……,一条insert语句含有6万条记录。</p>
<blockquote><p>做一件事情，先做好，在做精</p>
</blockquote>
]]></content>
    <category scheme="http://yoursite.com/tags/MySQL/" term="MySQL"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[MySQL部署指南]]></title>
    <link href="http://yoursite.com/2013/09/28/mysql部署指南/"/>
    <id>http://yoursite.com/2013/09/28/mysql部署指南/</id>
    <published>2013-09-28T01:19:45.000Z</published>
    <updated>2013-09-28T04:23:18.000Z</updated>
    <content type="html"><![CDATA[<p>Mac Mysql -&gt; Windows Mysql</p>
<p>以管理员身份登录mysql</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="comment">mysql</span> <span class="literal">-</span><span class="comment">u</span> <span class="comment">root</span> <span class="literal">-</span><span class="comment">p
</pre></td></tr></table></figure>

<p>选择mysql数据库</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="comment">mysql</span> <span class="literal">-</span><span class="comment">u</span> <span class="comment">root</span> <span class="literal">-</span><span class="comment">p
</pre></td></tr></table></figure>

<p>创建用户并设定密码</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">'xxx'</span>@<span class="string">'localhost'</span> identified <span class="keyword">by</span> <span class="string">'yyy'</span>
</pre></td></tr></table></figure>

<p>使操作生效</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="title">flush</span> privileges
</pre></td></tr></table></figure>

<p>为用户创建数据库</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">create</span> database sms <span class="keyword">default</span> <span class="keyword">character</span> <span class="keyword">set</span> utf8 <span class="keyword">collate</span> utf8_general_ci;</span>
</pre></td></tr></table></figure>

<p>为用户赋予操作数据库testdb的所有权限</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> sms.* <span class="keyword">to</span> xxx@localhost identified  <span class="keyword">by</span> <span class="string">'yyy'</span>
</pre></td></tr></table></figure>

<p>允许任何地址远程连接</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'xxx'</span>@<span class="string">'%'</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">'yyy'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</span>
</pre></td></tr></table></figure>

<p>使操作生效</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="title">flush</span> privileges
</pre></td></tr></table></figure>

<p>用新用户登录</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="comment">mysql</span> <span class="literal">-</span><span class="comment">u</span> <span class="comment">test</span> <span class="literal">-</span><span class="comment">p
</pre></td></tr></table></figure>

<p>默认字符集导出数据库</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="comment">mysqldump</span> <span class="literal">-</span><span class="comment">u</span> <span class="comment">xxq</span> <span class="literal">-</span><span class="comment">p</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">default</span>-<span class="comment">character</span>-<span class="comment">set=utf8</span> <span class="comment">sms</span> &gt; <span class="comment">sms</span>.<span class="comment">sql</span>
<span class="comment">mysqldump</span> <span class="literal">-</span><span class="comment">t</span> <span class="comment">dbname</span> <span class="literal">-</span><span class="comment">u</span> <span class="comment">root</span> <span class="literal">-</span><span class="comment">p</span> &gt; <span class="comment">dataonly</span>.<span class="comment">sql
</pre></td></tr></table></figure>

<p>转换字符集导出数据库</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="comment">mysqldump</span> <span class="literal">-</span><span class="comment">u</span> <span class="comment">xxq</span> <span class="literal">-</span><span class="comment">p</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">default</span>-<span class="comment">character</span>-<span class="comment">set=utf8</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">set</span>-<span class="comment">charset=latin1</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">skip</span>-<span class="comment">opt</span> <span class="comment">sms</span>&gt;<span class="comment">sms</span>.<span class="comment">sql
</pre></td></tr></table></figure>

<p>导入数据库</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="comment">mysql</span> <span class="literal">-</span><span class="comment">u</span> <span class="comment">xxq</span> <span class="literal">-</span><span class="comment">p</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">default</span>-<span class="comment">character</span>-<span class="comment">set=utf8</span>  <span class="comment">sms</span> &lt; <span class="comment">sms</span>.<span class="comment">sql
</pre></td></tr></table></figure>

<p>mysql重启 </p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="variable">$mysql_dir</span>/bin/mysqladmin -u root -p <span class="keyword">shutdown</span>
<span class="variable">$mysql_dir</span>/bin/safe_mysqld &
</pre></td></tr></table></figure>

<p>如何查看mysql占用端口，验证mysql是否启动</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="title">netstat</span> -aon | findstr <span class="string">"3306"</span>
<span class="title">telnet</span> mysql <span class="number">3306</span>
</pre></td></tr></table></figure>

<p>mysql的字符集和校对规则有4个级别的默认设置：服务器级、数据库级、表级和字段级。</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="operator"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">'character_set_%'</span>;</span>
<span class="operator"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> tb_name;</span>
<span class="operator"><span class="keyword">show</span> <span class="keyword">full</span> columns <span class="keyword">from</span> tb_name;</span>
</pre></td></tr></table></figure>

<p>如何change服务器级字符集、数据库级、表级和字段级</p>
<figure class="highlight lang-[sql]"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre>修改my.ini  
default-character-<span class="operator"><span class="keyword">set</span> = utf8
character_set_server =  utf8

<span class="keyword">alter</span> database dbname <span class="keyword">character</span> <span class="keyword">set</span> utf8 <span class="keyword">collate</span> utf8_general_ci;</span>
<span class="operator"><span class="keyword">alter</span> <span class="keyword">table</span> tb_name convert <span class="keyword">to</span> <span class="keyword">character</span> <span class="keyword">set</span> charset_name;</span>
<span class="operator"><span class="keyword">alter</span> <span class="keyword">table</span> tb_name modify latin1_text_col text <span class="keyword">character</span> <span class="keyword">set</span> utf8;</span>
<span class="operator"><span class="keyword">alter</span> <span class="keyword">table</span> tb_name change old_col_name new_column <span class="keyword">varchar</span>(<span class="number">10</span>) <span class="keyword">character</span> <span class="keyword">set</span> utf8 <span class="keyword">collate</span> utf8_general_ci;</span>
</pre></td></tr></table></figure>

<blockquote><p>低调做人，高调做事</p>
</blockquote>
]]></content>
    <category scheme="http://yoursite.com/tags/MySQL/" term="MySQL"/>
  </entry>
</feed>
